{"version":3,"sources":["models/ContextActionType.enum.ts","utils/Constants.ts","store/categories/categories.types.ts","store/categories/categories.reducer.ts","store/context/context.types.ts","store/context/context.reducer.ts","store/root.reducer.ts","store/store.ts","store/categories/categories.actions.ts","components/categoriesList/CategoriesList.tsx","store/context/context.actions.ts","pages/categories/Categories.page.tsx","pages/locations/Locations.page.tsx","pages/Page404/Page404.page.tsx","pages/createCategory/CreateUpdateCategory.page.tsx","components/toolbar/Toolbar.tsx","components/defaultPageLayout/DefaultPageLayout.tsx","App.tsx","index.tsx"],"names":["ContextActionType","REDUX_STATE_STORAGE_KEY","SET_CATEGORIES_LIST_ACTION","SET_SELECTED_CATEGORIES_ID_ACTION","DELETE_CATEGORY_ITEM_ACTION","UPDATE_CATEGORY_ITEM_ACTION","CREATE_CATEGORY_ITEM_ACTION","INITIAL_STATE","list","selected","setCategoriesList","state","action","payload","setSelectedCategoryId","console","log","setDeleteCategoryItem","newList","filter","it","id","setUpdateCategoryItem","newCategory","map","content","name","createCategoryItem","categoriesReducer","type","t","SET_CONTEXT_TYPE_BY_ID_ACTION","SET_CONTEXT_TYPE_ACTION","contextType","New","setContextActionTypeById","Update","setContextActionType","contextReducer","rootReducer","combineReducers","common","categories","locations","context","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middlewares","thunk","store","createStore","applyMiddleware","subscribe","localStorage","setItem","JSON","stringify","getState","category","useStyles","makeStyles","theme","createStyles","root","width","backgroundColor","palette","background","paper","item","minHeight","connect","selectedCategory","dispatch","setContextTypeById","contextActions","props","classes","useEffect","List","component","className","aria-label","Fragment","ListItem","onClick","button","ListItemText","primary","Divider","categoriesList","setCategories","categoriesActions","parse","getItem","length","Locations","Page404","Grid","container","spacing","direction","alignItems","justify","style","xs","marginTop","display","flexDirection","avatar","margin","secondary","main","form","submit","history","useHistory","parameters","useParams","useState","setName","Container","maxWidth","Typography","variant","noValidate","onSubmit","e","newCat","preventDefault","Date","valueOf","push","TextField","required","label","value","onChange","event","target","fullWidth","autoFocus","autoComplete","Button","color","flexGrow","menuButton","marginRight","title","setContextType","actionsElements","newElements","None","Link","to","updateElements","emptyElements","AppBar","position","Toolbar","IconButton","edge","DefaultPageLayout","children","App","CssBaseline","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c313eb1a.chunk.js","sourcesContent":["export enum ContextActionType {\r\n  None,\r\n  New,\r\n  Update,\r\n}\r\n","export const REDUX_STATE_STORAGE_KEY = \"REDUX_STATE_STORAGE_KEY\";\r\nexport const CATEGORIES_LOCAL_STORAGE_KEY = \"Categories\";\r\nexport const SELECTED_CATEGORY_LOCAL_STORAGE_KEY = \"selectedCategoryItem\";\r\n","export const SET_CATEGORIES_LIST_ACTION = \"categories/SET_CATEGORIES_LIST\";\r\nexport const SET_SELECTED_CATEGORIES_ID_ACTION =\r\n  \"categories/SET_SELECTED_CATEGORIES_ID_ACTION\";\r\nexport const DELETE_CATEGORY_ITEM_ACTION =\r\n  \"categories/DELETE_CATEGORY_ITEM_ACTION\";\r\nexport const UPDATE_CATEGORY_ITEM_ACTION =\r\n  \"categories/UPDATE_CATEGORY_ITEM_ACTION\";\r\nexport const CREATE_CATEGORY_ITEM_ACTION =\r\n  \"categories/CREATE_CATEGORY_ITEM_ACTION\";\r\n","import { Category } from \"../../models/Category\";\r\nimport { Action } from \"../@types/Action\";\r\nimport * as t from \"./categories.types\";\r\n\r\nexport interface State {\r\n  list: Category[];\r\n  selected: Category | null;\r\n}\r\n\r\nexport const INITIAL_STATE: State = {\r\n  list: [],\r\n  selected: null,\r\n};\r\n\r\nconst setCategoriesList = (state: State, action: Action) => {\r\n  return { ...state, list: action.payload };\r\n};\r\n\r\nconst setSelectedCategoryId = (state: State, action: Action) => {\r\n  console.log(state);\r\n  return {\r\n    ...state,\r\n    selected: state.selected === action.payload ? null : action.payload,\r\n  };\r\n};\r\n\r\nconst setDeleteCategoryItem = (state: State, action: Action) => {\r\n  const newList = state.list.filter((it) => it.id !== state.selected?.id);\r\n  console.log(newList);\r\n  return { ...state, list: newList };\r\n};\r\n\r\nconst setUpdateCategoryItem = (state: State, action: Action) => {\r\n  console.log(\"setUpdateCategoryItem\");\r\n  const newCategory = action.payload;\r\n  return {\r\n    ...state,\r\n    list: state.list.map((content) =>\r\n      content.id == newCategory.id\r\n        ? { ...content, name: newCategory.name }\r\n        : content\r\n    ),\r\n  };\r\n};\r\n\r\nconst createCategoryItem = (state: State, action: Action) => {\r\n  return { ...state, list: [...state.list, action.payload] };\r\n};\r\n\r\nconst categoriesReducer = (state: State = INITIAL_STATE, action: Action) => {\r\n  switch (action.type) {\r\n    case t.SET_CATEGORIES_LIST_ACTION:\r\n      return setCategoriesList(state, action);\r\n    case t.SET_SELECTED_CATEGORIES_ID_ACTION:\r\n      return setSelectedCategoryId(state, action);\r\n    case t.DELETE_CATEGORY_ITEM_ACTION:\r\n      return setDeleteCategoryItem(state, action);\r\n    case t.UPDATE_CATEGORY_ITEM_ACTION:\r\n      return setUpdateCategoryItem(state, action);\r\n    case t.CREATE_CATEGORY_ITEM_ACTION:\r\n      return createCategoryItem(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default categoriesReducer;\r\n","export const SET_CONTEXT_TYPE_BY_ID_ACTION =\r\n  \"context/SET_CONTEXT_TYPE_BY_ID_ACTION\";\r\nexport const SET_CONTEXT_TYPE_ACTION = \"context/SET_CONTEXT_TYPE_ACTION\";\r\n","import { Action } from \"../@types/Action\";\r\nimport * as t from \"./context.types\";\r\nimport { ContextActionType } from \"../../models/ContextActionType.enum\";\r\n\r\nexport interface State {\r\n  contextType: ContextActionType;\r\n}\r\n\r\nexport const INITIAL_STATE: State = {\r\n  contextType: ContextActionType.New,\r\n};\r\n\r\nconst setContextActionTypeById = (state: State, action: Action) => {\r\n  return {\r\n    ...state,\r\n    contextType:\r\n      action.payload == null ? ContextActionType.New : ContextActionType.Update,\r\n  };\r\n};\r\n\r\nconst setContextActionType = (state: State, action: Action) => {\r\n  console.log(\"setContextActionType\");\r\n\r\n  return {\r\n    ...state,\r\n    contextType: action.payload,\r\n  };\r\n};\r\n\r\nconst contextReducer = (state: State = INITIAL_STATE, action: Action) => {\r\n  switch (action.type) {\r\n    case t.SET_CONTEXT_TYPE_BY_ID_ACTION:\r\n      return setContextActionTypeById(state, action);\r\n    case t.SET_CONTEXT_TYPE_ACTION:\r\n      return setContextActionType(state, action);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default contextReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport categoriesReducer from \"./categories/categories.reducer\";\r\nimport contextReducer from \"./context/context.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  common: () => null,\r\n  categories: categoriesReducer,\r\n  locations: () => null,\r\n  context: contextReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { REDUX_STATE_STORAGE_KEY } from \"../utils/Constants\";\r\n// redux\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\n// thunk\r\nimport thunk from \"redux-thunk\";\r\n// root-reducer\r\nimport rootReducer from \"./root.reducer\";\r\n// devtools\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n// const persistedState = localStorage.getItem(\"reduxState\") || {};\r\n\r\nexport const loadState = () => {\r\n  try {\r\n    const serializedState = localStorage.getItem(REDUX_STATE_STORAGE_KEY);\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n};\r\n\r\nconst middlewares = [thunk /* , loadState */];\r\n// create store with reducers, devtools and thunk middleware\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n\r\nstore.subscribe(() => {\r\n  console.log(REDUX_STATE_STORAGE_KEY);\r\n  localStorage.setItem(\r\n    REDUX_STATE_STORAGE_KEY,\r\n    JSON.stringify(store.getState())\r\n  );\r\n});\r\n\r\nexport default store;\r\n","import { Category } from \"../../models/Category\";\r\nimport { Action } from \"../@types/Action\";\r\nimport * as t from \"./categories.types\";\r\n\r\nexport const setCategoriesList = (categories: Category[]): Action => {\r\n  return {\r\n    type: t.SET_CATEGORIES_LIST_ACTION,\r\n    payload: categories,\r\n  };\r\n};\r\n\r\nexport const setSelectedCategoryId = (category: Category): Action => {\r\n  return {\r\n    type: t.SET_SELECTED_CATEGORIES_ID_ACTION,\r\n    payload: category,\r\n  };\r\n};\r\n\r\nexport const setDeleteCategoryItem = (): Action => {\r\n  return {\r\n    type: t.DELETE_CATEGORY_ITEM_ACTION,\r\n    payload: null,\r\n  };\r\n};\r\n\r\nexport const setUpdateCategoryItem = (category: Category): Action => {\r\n  return {\r\n    type: t.UPDATE_CATEGORY_ITEM_ACTION,\r\n    payload: category,\r\n  };\r\n};\r\n\r\nexport const createCategoryItem = (category: Category): Action => {\r\n  return {\r\n    type: t.CREATE_CATEGORY_ITEM_ACTION,\r\n    payload: category,\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStyles, Theme, makeStyles } from \"@material-ui/core/styles\";\r\nimport * as categoriesActions from \"../../store/categories/categories.actions\";\r\nimport * as contextActions from \"../../store/context/context.actions\";\r\n\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { Category } from \"../../models/Category\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      backgroundColor: theme.palette.background.paper,\r\n    },\r\n    item: {\r\n      minHeight: \"80px\",\r\n    },\r\n  })\r\n);\r\n\r\n//state to props\r\nexport interface StateProps {\r\n  selectedCategory: Category;\r\n}\r\n//action to props\r\nexport interface DispatchProps {}\r\n//action to props\r\nexport interface DispatchProps {\r\n  setSelectedCategoryId: (category: Category) => void;\r\n  setContextTypeById: (id: number) => void;\r\n}\r\n//parent\r\nexport interface OwnProps {\r\n  list: Category[];\r\n}\r\nexport type Props = StateProps & DispatchProps & OwnProps;\r\n\r\n//component\r\nconst CategoriesList = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const { selectedCategory, setContextTypeById } = props;\r\n\r\n  useEffect(() => {\r\n    setContextTypeById(selectedCategory?.id);\r\n  }, [selectedCategory, setContextTypeById]);\r\n\r\n  return (\r\n    <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n      {props.list.map((it) => {\r\n        return (\r\n          <React.Fragment key={it.id}>\r\n            <ListItem\r\n              onClick={() => {\r\n                props.setSelectedCategoryId(it);\r\n              }}\r\n              className={classes.item}\r\n              button\r\n              selected={props.selectedCategory?.id === it.id}\r\n            >\r\n              <ListItemText primary={it.name} />\r\n            </ListItem>\r\n            <Divider />\r\n          </React.Fragment>\r\n        );\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n\r\n//redux\r\nconst mapStateToProps = (state: any): StateProps => ({\r\n  selectedCategory: state.categories.selected,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\r\n  setSelectedCategoryId: (id) =>\r\n    dispatch(categoriesActions.setSelectedCategoryId(id)),\r\n  setContextTypeById: (id) =>\r\n    dispatch(contextActions.setContextActionTypeById(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CategoriesList);\r\n","import { Action } from \"../@types/Action\";\r\nimport * as t from \"./context.types\";\r\nimport { ContextActionType } from \"../../models/ContextActionType.enum\";\r\n\r\nexport const setContextActionTypeById = (id: number): Action => {\r\n  return {\r\n    type: t.SET_CONTEXT_TYPE_BY_ID_ACTION,\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const setContextActionType = (type: ContextActionType): Action => {\r\n  return {\r\n    type: t.SET_CONTEXT_TYPE_ACTION,\r\n    payload: type,\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Category } from \"../../models/Category\";\r\nimport * as categoriesActions from \"../../store/categories/categories.actions\";\r\nimport categories from \"../../data/categories.json\";\r\nimport CategoriesList from \"../../components/categoriesList/CategoriesList\";\r\nimport { REDUX_STATE_STORAGE_KEY } from \"../../utils/Constants\";\r\n\r\n//state to props\r\nexport interface StateProps {\r\n  categoriesList: Category[];\r\n}\r\n//action to props\r\nexport interface DispatchProps {\r\n  setCategories: (categories: Category[]) => void;\r\n}\r\n//parent\r\nexport interface OwnProps {}\r\nexport type Props = StateProps & DispatchProps & OwnProps;\r\nconst Categories = (props: Props) => {\r\n  useEffect(() => {\r\n    const categoriesLocalStorage = JSON.parse(\r\n      localStorage.getItem(REDUX_STATE_STORAGE_KEY)!\r\n    );\r\n    if (categoriesLocalStorage.categories.list.length === 0) {\r\n      console.log(\"get categories from json file\");\r\n      props.setCategories(categories);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Categories</h1>\r\n      <CategoriesList list={props.categoriesList}></CategoriesList>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any): StateProps => ({\r\n  categoriesList: state.categories.list,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\r\n  setCategories: (categories) => {\r\n    dispatch(categoriesActions.setCategoriesList(categories));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);\r\n","import React from \"react\";\r\n\r\nconst Locations = () => {\r\n  return (\r\n    <div>\r\n      <h1>Locations</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Locations;\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={0}\r\n      direction=\"column\"\r\n      alignItems=\"center\"\r\n      justify=\"center\"\r\n      style={{ minHeight: \"80vh\" }}\r\n    >\r\n      <Grid item xs={3}>\r\n        <h1>Error 404</h1>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Page404;\r\n","import React, { useState } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport * as categoriesActions from \"../../store/categories/categories.actions\";\r\nimport { Category } from \"../../models/Category\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\n//state to props\r\nexport interface StateProps {\r\n  category: Category;\r\n}\r\n//action to props\r\nexport interface DispatchProps {\r\n  setUpdateCategoryItem: (category: Category) => void;\r\n  createCategoryItem: (category: Category) => void;\r\n}\r\n//parent\r\nexport interface OwnProps {}\r\nexport interface UpdateCategoryParam {\r\n  id: string;\r\n}\r\nexport type Props = StateProps & DispatchProps & OwnProps;\r\n\r\n//component\r\nconst CreateUpdateCategory = (props: any) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  let parameters: UpdateCategoryParam | null = useParams();\r\n  console.log(\"parameters>>>=\" + parameters);\r\n\r\n  const [name, setName] = useState(props.category?.name);\r\n\r\n  const handleSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    let newCat;\r\n    if (props.category) {\r\n      newCat = {\r\n        id: parameters?.id,\r\n        name: name,\r\n      };\r\n      props.setUpdateCategoryItem(newCat);\r\n    } else {\r\n      newCat = {\r\n        id: new Date().valueOf(),\r\n        name: name,\r\n      };\r\n      props.createCategoryItem(newCat);\r\n    }\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <div className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {!props.category\r\n            ? \"Create new Category\"\r\n            : `Update Category  ${props.category?.id}`}\r\n        </Typography>\r\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n          <TextField\r\n            required\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"Category Name\"\r\n            value={name}\r\n            onChange={(event) => {\r\n              setName(event.target.value);\r\n            }}\r\n            fullWidth\r\n            autoFocus\r\n            autoComplete=\"given-name\"\r\n            variant=\"standard\"\r\n            margin=\"normal\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {!props.category ? \"Create\" : \"Update\"}\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\n//redux\r\nconst mapStateToProps = (state: any): StateProps => ({\r\n  category: state.categories.selected,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\r\n  setUpdateCategoryItem: (category) =>\r\n    dispatch(categoriesActions.setUpdateCategoryItem(category)),\r\n  createCategoryItem: (category) =>\r\n    dispatch(categoriesActions.createCategoryItem(category)),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(CreateUpdateCategory);\r\n","import React, { ReactElement } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ContextActionType } from \"../../models/ContextActionType.enum\";\r\nimport * as contextActions from \"../../store/context/context.actions\";\r\nimport * as categoriesActions from \"../../store/categories/categories.actions\";\r\nimport { Category } from \"../../models/Category\";\r\n\r\n//state to props\r\nexport interface StateProps {\r\n  contextType: ContextActionType;\r\n  category: Category;\r\n}\r\n//action to props\r\nexport interface DispatchProps {\r\n  setContextType: (type: ContextActionType) => void;\r\n  setDeleteCategoryItem: () => void;\r\n  setUpdateCategoryItem: (category: Category) => void;\r\n}\r\n//parent\r\nexport interface OwnProps {}\r\nexport type Props = StateProps & DispatchProps & OwnProps;\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  })\r\n);\r\n\r\nconst ButtonAppBar = (props: Props) => {\r\n  const classes = useStyles();\r\n\r\n  let actionsElements: ReactElement;\r\n  let newElements: ReactElement = (\r\n    <React.Fragment>\r\n      <Button\r\n        color=\"inherit\"\r\n        onClick={() => {\r\n          console.log(\"onClick ContextActionType \");\r\n\r\n          props.setContextType(ContextActionType.None);\r\n        }}\r\n        component={Link}\r\n        to=\"/createCategory\"\r\n      >\r\n        New Category\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n  let updateElements: ReactElement = (\r\n    <React.Fragment>\r\n      <Button\r\n        color=\"inherit\"\r\n        component={Link}\r\n        to={`/categories/${props.category?.id}`}\r\n      >\r\n        Update\r\n      </Button>\r\n      <Button color=\"inherit\" onClick={() => props.setDeleteCategoryItem()}>\r\n        Delete\r\n      </Button>\r\n    </React.Fragment>\r\n  );\r\n  let emptyElements: ReactElement = <React.Fragment></React.Fragment>;\r\n\r\n  switch (props.contextType) {\r\n    case ContextActionType.None:\r\n      actionsElements = emptyElements;\r\n      break;\r\n    case ContextActionType.New:\r\n      actionsElements = newElements;\r\n      break;\r\n    case ContextActionType.Update:\r\n      actionsElements = updateElements;\r\n      break;\r\n    default:\r\n      actionsElements = newElements;\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            component={Link}\r\n            to=\"/\"\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            My Locations\r\n          </Typography>\r\n          {actionsElements}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\n//redux\r\nconst mapStateToProps = (state: any): StateProps => ({\r\n  contextType: state.context.contextType,\r\n  category: state.categories.selected,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: any): DispatchProps => ({\r\n  setContextType: (type) => dispatch(contextActions.setContextActionType(type)),\r\n  setDeleteCategoryItem: () =>\r\n    dispatch(categoriesActions.setDeleteCategoryItem()),\r\n  setUpdateCategoryItem: (category) =>\r\n    dispatch(categoriesActions.setUpdateCategoryItem(category)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonAppBar);\r\n","import React, { ReactElement } from \"react\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nexport interface Props {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst DefaultPageLayout = (props: any): ReactElement => {\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      {!props.children != null ? props.children : \"\"}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default DefaultPageLayout;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport store from \"./store/store\";\nimport CategoriesPage from \"./pages/categories/Categories.page\";\n// import HomePage from \"./pages/home/Home.page\";\nimport LocationsPage from \"./pages/locations/Locations.page\";\nimport Page404 from \"./pages/Page404/Page404.page\";\nimport CreateUpdateCategory from \"./pages/createCategory/CreateUpdateCategory.page\";\nimport Toolbar from \"./components/toolbar/Toolbar\";\nimport DefaultPageLayout from \"./components/defaultPageLayout/DefaultPageLayout\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <CssBaseline />\n        <Toolbar />\n        <Switch>\n          <Route path=\"/\" exact>\n            <DefaultPageLayout>\n              {/* <HomePage /> */}\n              <CategoriesPage />\n            </DefaultPageLayout>\n          </Route>\n          <Route path=\"/locations\" exact>\n            <DefaultPageLayout>\n              <LocationsPage />\n            </DefaultPageLayout>\n          </Route>\n          <Route path=\"/categories\" exact>\n            <DefaultPageLayout>\n              <CategoriesPage />\n            </DefaultPageLayout>\n          </Route>\n          <Route path=\"/categories/:id\" exact>\n            <DefaultPageLayout>\n              <CreateUpdateCategory />\n            </DefaultPageLayout>\n          </Route>\n          <Route path=\"/createCategory\" exact>\n            <DefaultPageLayout>\n              <CreateUpdateCategory />\n            </DefaultPageLayout>\n          </Route>\n          <Route>\n            <DefaultPageLayout>\n              <Page404 />\n            </DefaultPageLayout>\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}